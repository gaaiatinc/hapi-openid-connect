# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/


user  nginx;
worker_rlimit_nofile  10240;
worker_processes 2;

error_log   /var/log/nginx/nginx-error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;

events {

       # For I/O event notification, the Linux kernel epoll facility essentially
       # optimizes Nginx to serve many clients with each thread. Only available
       # after late 2.5 kernel releases.
       use epoll;

       multi_accept  on;
       worker_connections  4096;  ## Default: 1024
}

http {

    include        /etc/nginx/mime.types;
    default_type   application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    underscores_in_headers  on;

    # Increase the limit to accommodate large request headers
    # sampleapp applications may use up to 20K headers
    large_client_header_buffers     4 20k;

    # tcp and cache configs
    sendfile          on;
    tcp_nopush        on;
    tcp_nodelay   on;
    client_header_timeout   1m;
    client_body_timeout  1m;

    # Is utilized if the client stops reading data, allowing Nginx to quickly
    # free up the stale client connection. The default is 60.
    send_timeout  10;

    # Allow the server to close the connection after a client stops responding.
    # Frees up socket-associated memory. This helps prevent low bandwidth DDoS
    # attacks like rSnake's Slowlaris and also provides a higher survivability
    # profile due to network issues. This essentially allows you to recycle
    # connections and bounce away from failure states quickly.
    reset_timedout_connection  on;
    keepalive_timeout    30;

    open_file_cache   max=10240 inactive=20s;
    open_file_cache_valid  2m;
    open_file_cache_min_uses  2;
    open_file_cache_errors  on;

    # compress  logic
    gzip                on;
    gzip_comp_level   2;
    gzip_min_length   0;
    gzip_http_version   1.0;
    gzip_disable    "MSIE [1-6]\.(?!.*SV1)";
    gzip_types  text/css application/javascript;

    # nginx may use these directories while serving reverse-proxy requests
    proxy_temp_path               /var/lib/nginx/tmp/proxy_temp;
    client_body_temp_path         /var/lib/nginx/tmp/client_temp;

    # these definitions are required because nginx is run with the gear user id;
    # at startup time nginx always checks if these directories exist, and will
    # bail out if the test is negative
    fastcgi_temp_path             /var/lib/nginx/tmp/fastcgi_temp;
    scgi_temp_path                /var/lib/nginx/tmp/scgi_temp;
    uwsgi_temp_path               /var/lib/nginx/tmp/uwsgi_temp;

    #
    # node.js application endpoint
    #
    upstream oidc_proxy {
        server localhost:8000 fail_timeout=10 max_fails=10;
    }

    limit_req_zone $http_x_forwarded_for zone=one:10m rate=60r/s;

    server {

        listen          443 ssl;
        server_name     localhost.sampleapp.com;

        access_log  /var/log/nginx/sa-access.log;
        error_log  /var/log/nginx/sa-error.log;


        #
        # For sa
        #
        set             $HOME_PAGE /sampleapp/home;

        #
        # SSL Handling
        #
        ssl                     on;
        ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate         /etc/nginx/ssl/sampleapp-cert.pem;
        ssl_certificate_key     /etc/nginx/ssl/sampleapp-key.pem;
        ssl_ciphers             RC4:HIGH:!aNULL:!MD5:!kEDH;
        ssl_prefer_server_ciphers       on;
        ssl_session_cache       shared:SSL:10m;
        ssl_session_timeout     10m;

        location / {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy$HOME_PAGE;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        location /favicon.ico {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy/res/images/favicon/favicon.ico;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        location /robots.txt {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy/res/robots.txt;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        #
        # REST requests
        #
        location ~* ^\/rest/.* {

            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://api_proxy;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }


        #
        # OIDC requests
        #
        location ~* ^\/oidc/.* {

            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://oidc_proxy;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }


        #
        # REST requests
        #
        location ~* ^\/api/.* {

            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://api_proxy;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        #
        #  static resources
        #
        location ~* ^\/res/.* {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        #
        #  For Sample App
        #
        location ~* ^\/([a-zA-Z][a-zA-Z])(/sampleapp/.*)$ {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header x-literal-url-cc $1;

            proxy_pass       https://webapp_proxy$2$is_args$args;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        location ~* ^\/sampleapp/.* {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }

        location ~* ^(/|/home)$ {
            limit_except GET HEAD {
                deny  all;
            }
            limit_req_status 444;
            limit_req zone=one burst=10 nodelay;

            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header Host               $http_host;
            proxy_set_header X-NginX-Proxy      true;
            proxy_set_header X-Forwarded-Proto  $scheme;

            proxy_pass       https://webapp_proxy$HOME_PAGE$is_args$args;
            proxy_redirect   off;

            proxy_http_version 1.1;
        }
    }

    #HTTP rewrite HTTPS
    server {
        listen         80;
        server_name    localhost.sampleapp.com;
        rewrite        ^ https://$host$request_uri? permanent;
    }
}
